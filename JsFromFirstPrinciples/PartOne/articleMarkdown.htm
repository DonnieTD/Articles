<p> When working with any complex system the best way to make sense of the chaos is to start from first principles. Start with the why and the how will follow on its own. There is a misconception that JavaScript is intrinsically simple, and yet I see more confusion surrounding JavaScript, than any other language I've worked with.

    The aim of this series is to highlight the foundations of JavaScript hoping that this will make it easier to understand the more esoteric parts of this beautiful language </p>
    
    <strong>Lexical Grammar:</strong>
    The sequence of characters that form valid tokens of the language.
    
    These are our building block and everything we will be doing will build off of these tokens.
    
    <u>In JavaScript the tokens are:</u>
    <ul>
    <li>White Space</li>
    <li>Line Terminators</li>
    <li>Comments</li>
    <li>Keywords</li>
    <li>Literals ( discussed in part two )</li>
    </ul> 
    
    <small><strong>I left out Hashbang comments and I will have a section on them later in the series if need be</strong><small>
    
    <h2>Some more info around these elements:</h2>
    
    <strong>White space:</strong>
    
    These characters are usually unnecessary for the functionality of the code but make it easier to read and separate the tokens from each other.
    
    <strong>Line terminators:</strong>
    
    In addition to white space characters, line terminator characters are used to improve the readability of the source text. However, in some cases, they are forbidden. 
    
    Line terminators also affect the process of automatic semicolon insertion. 
    
    Here's a list of the line terminator names:
    
    <ul>
       <li>Line Feed</li>
       <li>Carriage Return</li>
       <li>Line Separator</li>
       <li>Paragraph Separator</li>
    </ul>
    
    <strong>Comments:</strong>
    
    Comments are used to annotate your code or disable code blocks that aren't needed now but for example might be needed in the near future.
    
    There are two kinds of comments in JavaScript:
    
    // Single line comments
    
    and
    
    /* 
    Multi-line Comments
    */
    
    <strong>Keywords:</strong>
    
    <pre>
    <code>
    break case catch class const continue debugger default delete do else export<br/>extends finally for function if import in instanceof new return super switch<br/>this throw try typeof var void while with yield
    </code>
    </pre>
    
    
    And that's it for part one !
    
    Here's the link to part two for the first discussion on literals:
    
    https://dev.to/donnietd/javascript-from-first-principles-pt-2-1gj
    <i><h5>Sources:</h5>https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar</i>